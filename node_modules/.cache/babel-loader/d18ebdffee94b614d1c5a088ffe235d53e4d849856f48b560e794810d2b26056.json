{"ast":null,"code":"import _regeneratorRuntime from \"/home/redeyeryu/Desktop/smart-expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/redeyeryu/Desktop/smart-expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/redeyeryu/Desktop/smart-expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/redeyeryu/Desktop/smart-expense-tracker/src/components/ExpenseChart.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"chart.js/auto\";\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ExpenseChart = function ExpenseChart(_ref) {\n  _s();\n  var expenses = _ref.expenses;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    predictedCategories = _useState2[0],\n    setPredictedCategories = _useState2[1];\n  var chartRef = useRef(null);\n  var chartInstanceRef = useRef(null); // Reference to the chart instance\n\n  useEffect(function () {\n    var predictCategories = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, categories;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(\"http://localhost:5002/predict\", {\n                descriptions: expenses.map(function (expense) {\n                  return expense.description;\n                })\n              });\n            case 3:\n              response = _context.sent;\n              console.log(response.data['predictions']);\n              categories = response.data.categories;\n              setPredictedCategories(categories);\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Failed to fetch predicted categories:\", _context.t0);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n      return function predictCategories() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    predictCategories();\n  }, [expenses]);\n  useEffect(function () {\n    if (chartRef.current && predictedCategories && predictedCategories.length > 0) {\n      var ctx = chartRef.current.getContext(\"2d\");\n      var categories = {};\n      expenses.forEach(function (expense, index) {\n        var category = predictedCategories[index] || \"Miscellaneous\";\n        if (categories[category]) {\n          categories[category] += expense.amount;\n        } else {\n          categories[category] = expense.amount;\n        }\n      });\n      var chartData = {\n        labels: Object.keys(categories),\n        datasets: [{\n          label: \"Expenses\",\n          data: Object.values(categories),\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n          borderWidth: 1\n        }]\n      };\n\n      // Destroy the previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n\n      // Create a new chart instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: \"category\",\n              labels: Object.keys(categories)\n            }\n          }\n        }\n      });\n    }\n  }, [predictedCategories, expenses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n_s(ExpenseChart, \"uDUjlrPR2Qqj/YJKJL6KwBZLBOk=\");\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Chart","jsxDEV","_jsxDEV","ExpenseChart","_ref","_s","expenses","_useState","_useState2","_slicedToArray","predictedCategories","setPredictedCategories","chartRef","chartInstanceRef","predictCategories","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","categories","wrap","_callee$","_context","prev","next","post","descriptions","map","expense","description","sent","console","log","data","t0","error","stop","apply","arguments","current","length","ctx","getContext","forEach","index","category","amount","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderWidth","destroy","type","options","scales","x","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","ref","_c","$RefreshReg$"],"sources":["/home/redeyeryu/Desktop/smart-expense-tracker/src/components/ExpenseChart.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"chart.js/auto\";\nimport '../styles.css'\n\nconst ExpenseChart = ({ expenses }) => {\n  const [predictedCategories, setPredictedCategories] = useState([]);\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null); // Reference to the chart instance\n\n  useEffect(() => {\n    const predictCategories = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5002/predict\", {\n          descriptions: expenses.map((expense) => expense.description),\n        });\n        console.log(response.data['predictions'])\n        const { categories } = response.data;\n        setPredictedCategories(categories);\n      } catch (error) {\n        console.error(\"Failed to fetch predicted categories:\", error);\n      }\n    };\n\n    predictCategories();\n  }, [expenses]);\n\n  useEffect(() => {\n    if (chartRef.current && predictedCategories && predictedCategories.length > 0) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      const categories = {};\n\n      expenses.forEach((expense, index) => {\n        const category = predictedCategories[index] || \"Miscellaneous\";\n\n        if (categories[category]) {\n          categories[category] += expense.amount;\n        } else {\n          categories[category] = expense.amount;\n        }\n      });\n\n      const chartData = {\n        labels: Object.keys(categories),\n        datasets: [\n          {\n            label: \"Expenses\",\n            data: Object.values(categories),\n            backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n            borderWidth: 1,\n          },\n        ],\n      };\n\n      // Destroy the previous chart instance if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n\n      // Create a new chart instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: \"category\",\n              labels: Object.keys(categories),\n            },\n          },\n        },\n      });\n    }\n  }, [predictedCategories, expenses]);\n\n  return (\n    <div>\n      <h2>Expense Chart</h2>\n      {<canvas ref={chartRef} />}\n    </div>\n  );\n};\n\nexport default ExpenseChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}